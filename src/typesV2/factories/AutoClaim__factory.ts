/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AutoClaim, AutoClaimInterface } from "../AutoClaim";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolFactoryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "updateIntervalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "PaidClaimRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newReward",
        type: "uint256",
      },
    ],
    name: "PaidClaimRequestUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "PaidRequestExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
    ],
    name: "RequestWithdrawn",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "updateIntervalId",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
        ],
        internalType: "struct IAutoClaim.ClaimRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "currentUpdateIntervalId",
        type: "uint256",
      },
    ],
    name: "checkClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
    ],
    name: "checkUserClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimRequests",
    outputs: [
      {
        internalType: "uint128",
        name: "updateIntervalId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "makePaidClaimRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "poolCommitterAddresses",
        type: "address[]",
      },
    ],
    name: "multiPaidClaimMultiplePoolCommitters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "poolCommitterAddress",
        type: "address",
      },
    ],
    name: "multiPaidClaimSinglePoolCommitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolCommitterAddress",
        type: "address",
      },
    ],
    name: "paidClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
    ],
    name: "withdrawClaimRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "withdrawUserClaimRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161121738038061121783398101604081905261002f916100ae565b6001600160a01b0381166100895760405162461bcd60e51b815260206004820152601860248201527f506f6f6c466163746f72792061646472657373203d3d20300000000000000000604482015260640160405180910390fd5b600180546001600160a01b0319166001600160a01b03929092169190911790556100de565b6000602082840312156100c057600080fd5b81516001600160a01b03811681146100d757600080fd5b9392505050565b61112a806100ed6000396000f3fe60806040526004361061008a5760003560e01c8063883e9e4811610059578063883e9e48146101305780638d68dd61146101505780639b42f47e146101b7578063c76ac728146101ca578063f009fc08146101ea57600080fd5b806307119aeb14610099578063351ea38a146100bb5780634c830642146100f057806384de06e41461011057600080fd5b3661009457600080fd5b600080fd5b3480156100a557600080fd5b506100b96100b4366004610e76565b61020a565b005b3480156100c757600080fd5b506100db6100d6366004610fa6565b6102f2565b60405190151581526020015b60405180910390f35b3480156100fc57600080fd5b506100b961010b366004610e76565b61031e565b34801561011c57600080fd5b506100b961012b366004610ec4565b6103ce565b34801561013c57600080fd5b506100db61014b366004610e91565b6104c0565b34801561015c57600080fd5b5061019861016b366004610e91565b6000602081815292815260408082209093529081522080546001909101546001600160801b039091169082565b604080516001600160801b0390931683526020830191909152016100e7565b6100b96101c5366004610e76565b610583565b3480156101d657600080fd5b506100b96101e5366004610e91565b6108ba565b3480156101f657600080fd5b506100b9610205366004610f18565b610a19565b6001546040516359e86a9960e01b81523360048201526001600160a01b03909116906359e86a999060240160206040518083038186803b15801561024d57600080fd5b505afa158015610261573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102859190610f84565b6102aa5760405162461bcd60e51b81526004016102a19061103e565b60405180910390fd5b6001600160a01b038116600090815260208181526040808320338452909152812060018101805482546001600160801b031916909255919091556102ee8282610bb4565b5050565b81516000906001600160801b031615801590610317575082516001600160801b031682115b9392505050565b336000908152602081815260408083206001600160a01b03851684529091529020546001600160801b0316156103cb57336000818152602081815260408083206001600160a01b0386168452909152812060018101805482546001600160801b03191690925591909155906103939082610bb4565b6040516001600160a01b0383169033907fbeb52c9358dfd474b9e79cc7bb7c88a2079664f938ff899c7a54bbaa5e54b08a90600090a3505b50565b6000808290506000816001600160a01b0316639d03132e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561040f57600080fd5b505afa158015610423573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104479190611021565b6001600160801b0316905060005b858110156104ad5761048f878783818110610472576104726110c9565b90506020020160208101906104879190610e76565b868585610cd2565b6104999085611080565b9350806104a581611098565b915050610455565b506104b83384610bb4565b505050505050565b6001600160a01b038083166000908152602081815260408083209385168084529382528083208151808301835281546001600160801b03168152600190910154818401528151634e81899760e11b8152915193946103179491939092639d03132e9260048083019392829003018186803b15801561053d57600080fd5b505afa158015610551573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105759190611021565b6001600160801b03166102f2565b6001546040516359e86a9960e01b81523360048201526001600160a01b03909116906359e86a999060240160206040518083038186803b1580156105c657600080fd5b505afa1580156105da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fe9190610f84565b61061a5760405162461bcd60e51b81526004016102a19061103e565b6001600160a01b03811660009081526020818152604080832033808552925290912080549091906001600160801b031680156107d257816001600160a01b0316639d03132e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561068957600080fd5b505afa15801561069d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c19190611021565b6001600160801b0316816001600160801b03161015610778576001600160a01b0384811660008181526020818152604080832033845290915280822060018101805482546001600160801b0319169092559290925551630f41a04d60e11b8152600481019290925291841690631e83409a90602401600060405180830381600087803b15801561075057600080fd5b505af1158015610764573d6000803e3d6000fd5b505050506107728582610bb4565b506107d2565b3483600101600082825461078c9190611080565b9091555050600183015460405133906001600160a01b038716907f1b0cd6fbb8d6f8911969df04996d8d67f926c059c09a2df27305bb1b36b5917c90600090a450505050565b816001600160a01b031663d4c4e2836040518163ffffffff1660e01b815260040160206040518083038186803b15801561080b57600080fd5b505afa15801561081f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108439190611021565b6001600160a01b03851660008181526020818152604080832033808552925280832080546001600160801b0319166001600160801b038716178155346001918201558801549051949550939092917f1b0cd6fbb8d6f8911969df04996d8d67f926c059c09a2df27305bb1b36b5917c91a450505050565b6001546040516359e86a9960e01b81526001600160a01b038381166004830152909116906359e86a999060240160206040518083038186803b1580156108ff57600080fd5b505afa158015610913573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109379190610f84565b61097b5760405162461bcd60e51b815260206004820152601560248201527424b73b30b634b2102837b7b621b7b6b6b4ba3a32b960591b60448201526064016102a1565b60008190506000816001600160a01b0316639d03132e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109bb57600080fd5b505afa1580156109cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f39190611021565b6001600160801b03169050610a1333610a0e86868686610cd2565b610bb4565b50505050565b828114610a745760405162461bcd60e51b815260206004820152602360248201527f537570706c69656420617272617973206d7573742062652073616d65206c656e6044820152620cee8d60eb1b60648201526084016102a1565b6000805b84811015610ba2576000848483818110610a9457610a946110c9565b9050602002016020810190610aa99190610e76565b90506000816001600160a01b0316639d03132e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ae657600080fd5b505afa158015610afa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1e9190611021565b6001600160801b03169050610b81888885818110610b3e57610b3e6110c9565b9050602002016020810190610b539190610e76565b878786818110610b6557610b656110c9565b9050602002016020810190610b7a9190610e76565b8484610cd2565b610b8b9085611080565b935050508080610b9a90611098565b915050610a78565b50610bad3382610bb4565b5050505050565b80471015610c045760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016102a1565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610c51576040519150601f19603f3d011682016040523d82523d6000602084013e610c56565b606091505b5050905080610ccd5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016102a1565b505050565b6001600160a01b038085166000908152602081815260408083209387168352928152828220835180850190945280546001600160801b03168452600101549083015290610d1f81846102f2565b15610e00576001600160a01b038681166000818152602081815260408083208a8616845290915280822080546001600160801b03191681556001019190915551630f41a04d60e11b8152600481019190915290851690631e83409a90602401600060405180830381600087803b158015610d9857600080fd5b505af1158015610dac573d6000803e3d6000fd5b505050508060200151856001600160a01b0316876001600160a01b03167ffc1ef6f920271c53bdf1b6aa6a98b1cd7baa573c736975d7eb1f85b2f0c3d7f360405160405180910390a4602001519050610e06565b60009150505b949350505050565b80356001600160a01b0381168114610e2557600080fd5b919050565b60008083601f840112610e3c57600080fd5b50813567ffffffffffffffff811115610e5457600080fd5b6020830191508360208260051b8501011115610e6f57600080fd5b9250929050565b600060208284031215610e8857600080fd5b61031782610e0e565b60008060408385031215610ea457600080fd5b610ead83610e0e565b9150610ebb60208401610e0e565b90509250929050565b600080600060408486031215610ed957600080fd5b833567ffffffffffffffff811115610ef057600080fd5b610efc86828701610e2a565b9094509250610f0f905060208501610e0e565b90509250925092565b60008060008060408587031215610f2e57600080fd5b843567ffffffffffffffff80821115610f4657600080fd5b610f5288838901610e2a565b90965094506020870135915080821115610f6b57600080fd5b50610f7887828801610e2a565b95989497509550505050565b600060208284031215610f9657600080fd5b8151801515811461031757600080fd5b6000808284036060811215610fba57600080fd5b6040811215610fc857600080fd5b506040516040810181811067ffffffffffffffff82111715610ffa57634e487b7160e01b600052604160045260246000fd5b6040528335611008816110df565b8152602084810135908201529460409093013593505050565b60006020828403121561103357600080fd5b8151610317816110df565b60208082526022908201527f6d73672e73656e646572206e6f742076616c696420506f6f6c436f6d6d69747460408201526132b960f11b606082015260800190565b60008219821115611093576110936110b3565b500190565b60006000198214156110ac576110ac6110b3565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160801b03811681146103cb57600080fdfea264697066735822122002d460ebabd993ccf035a98c47b66922ec6c0730c2d4b89a2d3340da550fdf2264736f6c63430008070033";

export class AutoClaim__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _poolFactoryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AutoClaim> {
    return super.deploy(
      _poolFactoryAddress,
      overrides || {}
    ) as Promise<AutoClaim>;
  }
  getDeployTransaction(
    _poolFactoryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_poolFactoryAddress, overrides || {});
  }
  attach(address: string): AutoClaim {
    return super.attach(address) as AutoClaim;
  }
  connect(signer: Signer): AutoClaim__factory {
    return super.connect(signer) as AutoClaim__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AutoClaimInterface {
    return new utils.Interface(_abi) as AutoClaimInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AutoClaim {
    return new Contract(address, _abi, signerOrProvider) as AutoClaim;
  }
}
