/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AutoClaim, AutoClaimInterface } from "../AutoClaim";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolFactoryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "updateIntervalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "PaidClaimRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newReward",
        type: "uint256",
      },
    ],
    name: "PaidClaimRequestUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "PaidRequestExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
    ],
    name: "RequestWithdrawn",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "updateIntervalId",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
        ],
        internalType: "struct IAutoClaim.ClaimRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "currentUpdateIntervalId",
        type: "uint256",
      },
    ],
    name: "checkClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
    ],
    name: "checkUserClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimRequests",
    outputs: [
      {
        internalType: "uint128",
        name: "updateIntervalId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "makePaidClaimRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args1",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "args2",
        type: "bytes",
      },
    ],
    name: "multiPaidClaimMultiplePoolCommitters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "poolCommitterAddress",
        type: "address",
      },
    ],
    name: "multiPaidClaimSinglePoolCommitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolCommitterAddress",
        type: "address",
      },
    ],
    name: "paidClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
    ],
    name: "withdrawClaimRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "withdrawUserClaimRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161158938038061158983398101604081905261002f9161009e565b6001600160a01b0381166100895760405162461bcd60e51b815260206004820152601860248201527f506f6f6c466163746f72792061646472657373203d3d20300000000000000000604482015260640160405180910390fd5b60601b6001600160601b0319166080526100ce565b6000602082840312156100b057600080fd5b81516001600160a01b03811681146100c757600080fd5b9392505050565b60805160601c61147a61010f6000396000818161021f0152818161035f0152818161059f01528181610790015281816109d60152610d63015261147a6000f3fe60806040526004361061008a5760003560e01c806382b342a41161005957806382b342a414610130578063883e9e48146101505780638d68dd61146101705780639b42f47e146101d7578063c76ac728146101ea57600080fd5b806307119aeb14610099578063351ea38a146100bb5780634c830642146100f057806355bb0a541461011057600080fd5b3661009457600080fd5b600080fd5b3480156100a557600080fd5b506100b96100b436600461118a565b61020a565b005b3480156100c757600080fd5b506100db6100d63660046112ba565b610314565b60405190151581526020015b60405180910390f35b3480156100fc57600080fd5b506100b961010b36600461118a565b610340565b34801561011c57600080fd5b506100b961012b36600461124e565b6104aa565b34801561013c57600080fd5b506100b961014b3660046111fa565b610702565b34801561015c57600080fd5b506100db61016b3660046111a5565b6108fe565b34801561017c57600080fd5b506101b861018b3660046111a5565b6000602081815292815260408082209093529081522080546001909101546001600160801b039091169082565b604080516001600160801b0390931683526020830191909152016100e7565b6100b96101e536600461118a565b6109c1565b3480156101f657600080fd5b506100b96102053660046111a5565b610d44565b6040516359e86a9960e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906359e86a999060240160206040518083038186803b15801561026957600080fd5b505afa15801561027d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a191906111d8565b6102c65760405162461bcd60e51b81526004016102bd90611389565b60405180910390fd5b6001600160a01b038116600090815260208181526040808320338452909152812060018101805482546001600160801b031916909255919091558015610310576103108282610ecb565b5050565b81516000906001600160801b031615801590610339575082516001600160801b031682115b9392505050565b6040516359e86a9960e01b81526001600160a01b0382811660048301527f000000000000000000000000000000000000000000000000000000000000000016906359e86a999060240160206040518083038186803b1580156103a157600080fd5b505afa1580156103b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d991906111d8565b6103f55760405162461bcd60e51b81526004016102bd90611352565b336000908152602081815260408083206001600160a01b03851684529091529020546001600160801b0316156104a757336000908152602081815260408083206001600160a01b0385168452909152812060018101805482546001600160801b03191690925591909155801561046f5761046f3382610ecb565b6040516001600160a01b0383169033907fbeb52c9358dfd474b9e79cc7bb7c88a2079664f938ff899c7a54bbaa5e54b08a90600090a3505b50565b6104b5601484611405565b156105025760405162461bcd60e51b815260206004820181905260248201527f61726773206d757374206f6e6c7920696e636c7564652061646472657373657360448201526064016102bd565b8281146105515760405162461bcd60e51b815260206004820152601860248201527f61726773206d7573742062652073616d65206c656e677468000000000000000060448201526064016102bd565b60008061055f6014866113f1565b9050838660008080805b868110156106e457843560601c9250853560601c6040516359e86a9960e01b81526001600160a01b0380831660048301529193507f0000000000000000000000000000000000000000000000000000000000000000909116906359e86a999060240160206040518083038186803b1580156105e357600080fd5b505afa1580156105f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061b91906111d8565b6106375760405162461bcd60e51b81526004016102bd90611352565b6000829050806001600160a01b0316639d03132e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561067557600080fd5b505afa158015610689573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ad9190611335565b6001600160801b031694506106c484848388610fe9565b6106ce908a6113cb565b9850506014958601959490940193600101610569565b5086156106f5576106f53388610ecb565b5050505050505050505050565b61070d601483611405565b1561075a5760405162461bcd60e51b815260206004820181905260248201527f61726773206d757374206f6e6c7920696e636c7564652061646472657373657360448201526064016102bd565b60006107676014846113f1565b6040516359e86a9960e01b81526001600160a01b038481166004830152919250859160009182917f000000000000000000000000000000000000000000000000000000000000000016906359e86a999060240160206040518083038186803b1580156107d257600080fd5b505afa1580156107e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080a91906111d8565b6108265760405162461bcd60e51b81526004016102bd90611352565b60008590506000816001600160a01b0316639d03132e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561086657600080fd5b505afa15801561087a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089e9190611335565b6001600160801b0316905060005b868110156108e257853560601c94506108c785898585610fe9565b6108d190856113cb565b6014969096019593506001016108ac565b5082156108f3576108f33384610ecb565b505050505050505050565b6001600160a01b038083166000908152602081815260408083209385168084529382528083208151808301835281546001600160801b03168152600190910154818401528151634e81899760e11b8152915193946103399491939092639d03132e9260048083019392829003018186803b15801561097b57600080fd5b505afa15801561098f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b39190611335565b6001600160801b0316610314565b6040516359e86a9960e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906359e86a999060240160206040518083038186803b158015610a2057600080fd5b505afa158015610a34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5891906111d8565b610a745760405162461bcd60e51b81526004016102bd90611389565b6001600160a01b03811660009081526020818152604080832033808552925290912080549091906001600160801b03168015610c7257816001600160a01b0316639d03132e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ae357600080fd5b505afa158015610af7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1b9190611335565b6001600160801b0316816001600160801b03161015610c18576001838101546001600160a01b0386811660008181526020818152604080832033845290915280822080546001600160801b0319168155909501559251630f41a04d60e11b81526004810193909352909190841690631e83409a90602401600060405180830381600087803b158015610bac57600080fd5b505af1158015610bc0573d6000803e3d6000fd5b505050506000811115610bd757610bd78582610ecb565b600184015460405133906001600160a01b038816907ffc1ef6f920271c53bdf1b6aa6a98b1cd7baa573c736975d7eb1f85b2f0c3d7f390600090a450610c72565b34836001016000828254610c2c91906113cb565b9091555050600183015460405133906001600160a01b038716907f1b0cd6fbb8d6f8911969df04996d8d67f926c059c09a2df27305bb1b36b5917c90600090a450505050565b816001600160a01b031663d4c4e2836040518163ffffffff1660e01b815260040160206040518083038186803b158015610cab57600080fd5b505afa158015610cbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce39190611335565b83546001600160801b0319166001600160801b03821617845534600185018190556040519192509033906001600160a01b038716907f1b0cd6fbb8d6f8911969df04996d8d67f926c059c09a2df27305bb1b36b5917c90600090a450505050565b6040516359e86a9960e01b81526001600160a01b0382811660048301527f000000000000000000000000000000000000000000000000000000000000000016906359e86a999060240160206040518083038186803b158015610da557600080fd5b505afa158015610db9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddd91906111d8565b610e215760405162461bcd60e51b815260206004820152601560248201527424b73b30b634b2102837b7b621b7b6b6b4ba3a32b960591b60448201526064016102bd565b60008190506000816001600160a01b0316639d03132e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e6157600080fd5b505afa158015610e75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e999190611335565b6001600160801b031690506000610eb285858585610fe9565b90508015610ec457610ec43382610ecb565b5050505050565b80471015610f1b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016102bd565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610f68576040519150601f19603f3d011682016040523d82523d6000602084013e610f6d565b606091505b5050905080610fe45760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016102bd565b505050565b6001600160a01b038085166000908152602081815260408083209387168352928152828220835180850190945280546001600160801b031684526001015490830152906110368184610314565b15611117576001600160a01b038681166000818152602081815260408083208a8616845290915280822080546001600160801b03191681556001019190915551630f41a04d60e11b8152600481019190915290851690631e83409a90602401600060405180830381600087803b1580156110af57600080fd5b505af11580156110c3573d6000803e3d6000fd5b505050508060200151856001600160a01b0316876001600160a01b03167ffc1ef6f920271c53bdf1b6aa6a98b1cd7baa573c736975d7eb1f85b2f0c3d7f360405160405180910390a460200151905061111d565b60009150505b949350505050565b80356001600160a01b038116811461113c57600080fd5b919050565b60008083601f84011261115357600080fd5b50813567ffffffffffffffff81111561116b57600080fd5b60208301915083602082850101111561118357600080fd5b9250929050565b60006020828403121561119c57600080fd5b61033982611125565b600080604083850312156111b857600080fd5b6111c183611125565b91506111cf60208401611125565b90509250929050565b6000602082840312156111ea57600080fd5b8151801515811461033957600080fd5b60008060006040848603121561120f57600080fd5b833567ffffffffffffffff81111561122657600080fd5b61123286828701611141565b9094509250611245905060208501611125565b90509250925092565b6000806000806040858703121561126457600080fd5b843567ffffffffffffffff8082111561127c57600080fd5b61128888838901611141565b909650945060208701359150808211156112a157600080fd5b506112ae87828801611141565b95989497509550505050565b60008082840360608112156112ce57600080fd5b60408112156112dc57600080fd5b506040516040810181811067ffffffffffffffff8211171561130e57634e487b7160e01b600052604160045260246000fd5b604052833561131c8161142f565b8152602084810135908201529460409093013593505050565b60006020828403121561134757600080fd5b81516103398161142f565b6020808252601f908201527f496e76616c696420706f6f6c20636f6d6d697474657220636f6e747261637400604082015260600190565b60208082526022908201527f6d73672e73656e646572206e6f742076616c696420506f6f6c436f6d6d69747460408201526132b960f11b606082015260800190565b600082198211156113ec57634e487b7160e01b600052601160045260246000fd5b500190565b60008261140057611400611419565b500490565b60008261141457611414611419565b500690565b634e487b7160e01b600052601260045260246000fd5b6001600160801b03811681146104a757600080fdfea26469706673582212209e27207c8ee31f116fe7a75debd5e0e26e24d503945fe3af844d09e0c4c9a24164736f6c63430008070033";

export class AutoClaim__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _poolFactoryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AutoClaim> {
    return super.deploy(
      _poolFactoryAddress,
      overrides || {}
    ) as Promise<AutoClaim>;
  }
  getDeployTransaction(
    _poolFactoryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_poolFactoryAddress, overrides || {});
  }
  attach(address: string): AutoClaim {
    return super.attach(address) as AutoClaim;
  }
  connect(signer: Signer): AutoClaim__factory {
    return super.connect(signer) as AutoClaim__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AutoClaimInterface {
    return new utils.Interface(_abi) as AutoClaimInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AutoClaim {
    return new Contract(address, _abi, signerOrProvider) as AutoClaim;
  }
}
