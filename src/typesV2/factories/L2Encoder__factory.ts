/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { L2Encoder, L2EncoderInterface } from "../L2Encoder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "args",
        type: "address[]",
      },
    ],
    name: "encodeAddressArray",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "enum IPoolCommitter.CommitType",
        name: "commitType",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "fromAggregateBalance",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "payForClaim",
        type: "bool",
      },
    ],
    name: "encodeCommitParams",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103e3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806302255e2a1461003b5780638da92a5d14610061575b600080fd5b61004e610049366004610289565b610081565b6040519081526020015b60405180910390f35b61007461006f366004610214565b6100aa565b604051610058919061030b565b60008061008d86610155565b608086901b608886901b609086901b010101915050949350505050565b6060808260005b8181101561014b57828686838181106100cc576100cc610397565b90506020020160208101906100e191906101e4565b604051602001610109919060609190911b6bffffffffffffffffffffffff1916815260140190565b60408051601f198184030181529082905261012792916020016102dc565b604051602081830303815290604052925080806101439061036e565b9150506100b1565b5090949350505050565b60006fffffffffffffffffffffffffffffffff8211156101cb5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b606482015260840160405180910390fd5b5090565b803580151581146101df57600080fd5b919050565b6000602082840312156101f657600080fd5b81356001600160a01b038116811461020d57600080fd5b9392505050565b6000806020838503121561022757600080fd5b823567ffffffffffffffff8082111561023f57600080fd5b818501915085601f83011261025357600080fd5b81358181111561026257600080fd5b8660208260051b850101111561027757600080fd5b60209290920196919550909350505050565b6000806000806080858703121561029f57600080fd5b843593506020850135600681106102b557600080fd5b92506102c3604086016101cf565b91506102d1606086016101cf565b905092959194509250565b600083516102ee81846020880161033e565b83519083019061030281836020880161033e565b01949350505050565b602081526000825180602084015261032a81604085016020870161033e565b601f01601f19169190910160400192915050565b60005b83811015610359578181015183820152602001610341565b83811115610368576000848401525b50505050565b600060001982141561039057634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fdfea26469706673582212201c7f6a74587ba849f7e70d0688982b8bad0fc86e66305401b7326969e1053a0064736f6c63430008070033";

export class L2Encoder__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<L2Encoder> {
    return super.deploy(overrides || {}) as Promise<L2Encoder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): L2Encoder {
    return super.attach(address) as L2Encoder;
  }
  connect(signer: Signer): L2Encoder__factory {
    return super.connect(signer) as L2Encoder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L2EncoderInterface {
    return new utils.Interface(_abi) as L2EncoderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L2Encoder {
    return new Contract(address, _abi, signerOrProvider) as L2Encoder;
  }
}
