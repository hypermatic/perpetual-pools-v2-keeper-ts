/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SMAOracle, SMAOracleInterface } from "../SMAOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_spotOracle",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_spotDecimals",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_observer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_periods",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_updateInterval",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_deployer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "INITIAL_NUM_PERIODS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256[24]",
        name: "xs",
        type: "int256[24]",
      },
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    name: "SMA",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "wad",
        type: "int256",
      },
    ],
    name: "fromWad",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceAndMetadata",
    outputs: [
      {
        internalType: "int256",
        name: "_price",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "observer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periods",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poll",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "scaler",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setInitialObservation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600060045560006005553480156200001b57600080fd5b5060405162000e8838038062000e888339810160408190526200003e916200025c565b6001600160a01b038616158015906200005f57506001600160a01b03841615155b620000b15760405162461bcd60e51b815260206004820152601b60248201527f534d413a204e756c6c206164647265737320666f7262696464656e000000000060448201526064015b60405180910390fd5b600083118015620001365750836001600160a01b0316635cfc1a516040518163ffffffff1660e01b815260040160206040518083038186803b158015620000f757600080fd5b505afa1580156200010c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001329190620002c2565b8311155b620001795760405162461bcd60e51b8152602060048201526012602482015271534d413a204f7574206f6620626f756e647360701b6044820152606401620000a8565b6012851115620001cc5760405162461bcd60e51b815260206004820152601f60248201527f534d413a20446563696d616c20707265636973696f6e20746f6f2068696768006044820152606401620000a8565b60a083905260016003819055600080546001600160a01b03808a166001600160a01b031992831617909255825491871691161790556001600160601b0319606082901b1660805262000220856012620003f0565b6200022d90600a62000325565b60065550600555506200042092505050565b80516001600160a01b03811681146200025757600080fd5b919050565b60008060008060008060c087890312156200027657600080fd5b62000281876200023f565b95506020870151945062000298604088016200023f565b93506060870151925060808701519150620002b660a088016200023f565b90509295509295509295565b600060208284031215620002d557600080fd5b5051919050565b600181815b808511156200031d5781600019048211156200030157620003016200040a565b808516156200030f57918102915b93841c9390800290620002e1565b509250929050565b60006200033383836200033a565b9392505050565b6000826200034b57506001620003ea565b816200035a57506000620003ea565b81600181146200037357600281146200037e576200039e565b6001915050620003ea565b60ff8411156200039257620003926200040a565b50506001821b620003ea565b5060208310610133831016604e8410600b8410161715620003c3575081810a620003ea565b620003cf8383620002dc565b8060001904821115620003e657620003e66200040a565b0290505b92915050565b6000828210156200040557620004056200040a565b500390565b634e487b7160e01b600052601160045260246000fd5b60805160601c60a051610a3f6200044960003960006106c70152600061019d0152610a3f6000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806398d5fdca1161008c578063a4caeb4211610066578063a4caeb421461018f578063d5f3948814610198578063db6d8fcf146101bf578063eb70e498146101d557600080fd5b806398d5fdca14610176578063a035b1fe1461017e578063a11752791461018757600080fd5b806341506e44116100c857806341506e4414610126578063536cd53f146101395780637dc0d1d0146101415780638940643c1461016c57600080fd5b80630417cf8e146100ef5780633c1e6ff51461010a578063412ad1cc14610113575b600080fd5b6100f7601281565b6040519081526020015b60405180910390f35b6100f760065481565b6100f761012136600461084f565b6101e8565b6100f76101343660046107b5565b6101fe565b6100f7600181565b600054610154906001600160a01b031681565b6040516001600160a01b039091168152602001610101565b6101746102cb565b005b6100f761043b565b6100f760025481565b6100f76104d4565b6100f760035481565b6101547f000000000000000000000000000000000000000000000000000000000000000081565b6101c761053d565b604051610101929190610881565b600154610154906001600160a01b031681565b6000600654826101f8919061096f565b92915050565b6000601882158015906102115750808311155b801561022457506001600160ff1b038311155b61026a5760405162461bcd60e51b8152602060048201526012602482015271534d413a204f7574206f6620626f756e647360701b60448201526064015b60405180910390fd5b60008061027785846109ab565b90505b828110156102b757858160188110610294576102946109f3565b60200201516102a39083610916565b9150806102af816109c2565b91505061027a565b506102c2848261096f565b95945050505050565b6001546004546001600160a01b0390911690156103365760405162461bcd60e51b815260206004820152602360248201527f707269636520616c72656164792075706461746564206174206c65617374206f6044820152626e636560e81b6064820152608401610261565b4260049081556000805460408051634c6afee560e11b815290516001600160a01b039092169384926398d5fdca928083019260209291829003018186803b15801561038057600080fd5b505afa158015610394573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b89190610868565b6040516387db03b760e01b8152600481018290529091506001600160a01b038416906387db03b790602401602060405180830381600087803b1580156103fd57600080fd5b505af1158015610411573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104359190610826565b50505050565b60006104cf600160009054906101000a90046001600160a01b03166001600160a01b03166353ed51436040518163ffffffff1660e01b81526004016103006040518083038186803b15801561048f57600080fd5b505afa1580156104a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c7919061074a565b6003546101fe565b905090565b60006005546004546104e69190610957565b4210156105355760405162461bcd60e51b815260206004820152601860248201527f534d413a20546f6f206561726c7920746f2075706461746500000000000000006044820152606401610261565b6104cf6105ab565b60006060610593600160009054906101000a90046001600160a01b03166001600160a01b03166353ed51436040518163ffffffff1660e01b81526004016103006040518083038186803b15801561048f57600080fd5b91506040518060200160405280600081525090509091565b60008060008054906101000a90046001600160a01b031690506000816001600160a01b03166398d5fdca6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105ff57600080fd5b505afa158015610613573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106379190610868565b4260049081556001546040516387db03b760e01b81529293506001600160a01b03169182916387db03b7916106729186910190815260200190565b602060405180830381600087803b15801561068c57600080fd5b505af11580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c49190610826565b507f0000000000000000000000000000000000000000000000000000000000000000600354101561070557600380549060006106ff836109c2565b91905055505b610742816001600160a01b03166353ed51436040518163ffffffff1660e01b81526004016103006040518083038186803b15801561048f57600080fd5b935050505090565b600061030080838503121561075e57600080fd5b83601f84011261076d57600080fd5b6107756108de565b808486848701111561078657600080fd5b600093505b60188410156107ab5780518352600193909301926020928301920161078b565b5095945050505050565b60008061032083850312156107c957600080fd5b83601f8401126107d857600080fd5b6107e06108de565b80846103008601878111156107f457600080fd5b60005b60188110156108165782358552602094850194909201916001016107f7565b5091979135965090945050505050565b60006020828403121561083857600080fd5b8151801515811461084857600080fd5b9392505050565b60006020828403121561086157600080fd5b5035919050565b60006020828403121561087a57600080fd5b5051919050565b82815260006020604081840152835180604085015260005b818110156108b557858101830151858201606001528201610899565b818111156108c7576000606083870101525b50601f01601f191692909201606001949350505050565b604051610300810167ffffffffffffffff8111828210171561091057634e487b7160e01b600052604160045260246000fd5b60405290565b600080821280156001600160ff1b0384900385131615610938576109386109dd565b600160ff1b8390038412811615610951576109516109dd565b50500190565b6000821982111561096a5761096a6109dd565b500190565b60008261098c57634e487b7160e01b600052601260045260246000fd5b600160ff1b8214600019841416156109a6576109a66109dd565b500590565b6000828210156109bd576109bd6109dd565b500390565b60006000198214156109d6576109d66109dd565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220d2e889ebd9696d9bdbeb9f2d94fdda845bf7c673ffd0922c7490a348a7074e7c64736f6c63430008070033";

export class SMAOracle__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _spotOracle: string,
    _spotDecimals: BigNumberish,
    _observer: string,
    _periods: BigNumberish,
    _updateInterval: BigNumberish,
    _deployer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SMAOracle> {
    return super.deploy(
      _spotOracle,
      _spotDecimals,
      _observer,
      _periods,
      _updateInterval,
      _deployer,
      overrides || {}
    ) as Promise<SMAOracle>;
  }
  getDeployTransaction(
    _spotOracle: string,
    _spotDecimals: BigNumberish,
    _observer: string,
    _periods: BigNumberish,
    _updateInterval: BigNumberish,
    _deployer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _spotOracle,
      _spotDecimals,
      _observer,
      _periods,
      _updateInterval,
      _deployer,
      overrides || {}
    );
  }
  attach(address: string): SMAOracle {
    return super.attach(address) as SMAOracle;
  }
  connect(signer: Signer): SMAOracle__factory {
    return super.connect(signer) as SMAOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SMAOracleInterface {
    return new utils.Interface(_abi) as SMAOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SMAOracle {
    return new Contract(address, _abi, signerOrProvider) as SMAOracle;
  }
}
